# Nginx Access Log Parser
[PARSER]
    Name        nginx_access
    Format      regex
    Regex       ^(?<remote>\S+) - - \[(?<time>[^\]]+)\] "(?<method>\S+) (?<path>[^ ]+) HTTP/(?<http_version>\S+)" (?<status>\d{3}) (?<body_bytes_sent>\d+) "(?<http_referer>[^"]*)" "(?<http_user_agent>[^"]*)"
    Time_Key    time
    Time_Format %d/%b/%Y:%H:%M:%S %z

# Nginx Error Log Parser
[PARSER]
    Name        nginx_error
    Format      regex
    Regex       ^(?<time>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?<level>\w+)\] (?<pid>\d+)#(?<tid>\d+): \*(?<connection>\d+) (?<msg>.+?) , client: (?<client>\d+\.\d+\.\d+\.\d+), server: (?<server>[^,]+), request: "(?<request>[^"]+)", upstream: "(?<upstream>[^"]+)", host: "(?<host>[^"]+)"
    Time_Key    time
    Time_Format %Y/%m/%d %H:%M:%S

# Spring Boot Log Parser (JSON-like prefix)
[PARSER]
    Name        spring_log
    Format      regex
    Regex       ^(?<time>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d+Z)\s+(?<level>\w+)\s+(?<pid>\d+) --- \[(?<thread>[^\]]+)\]\s+(?<logger>[^:]+)\s+:\s+(?<message>.*)
    Time_Key    time
    Time_Format %Y-%m-%dT%H:%M:%S.%LZ

# Flask (Python) Log Parser
[PARSER]
    Name        flask_log
    Format      regex
    Regex       ^(?<time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3})\s+(?<level>\w+)\s+(?<pid>\d+) --- \[(?<thread>[^\]]+)\]\s+(?<module>[^:]+)\s+:\s+(?<message>.*)
    Time_Key    time
    Time_Format %Y-%m-%d %H:%M:%S.%L

# Docker JSON Log Parser
[PARSER]
    Name        docker
    Format      json
    Time_Key    time
    Time_Format %Y-%m-%dT%H:%M:%S.%LZ